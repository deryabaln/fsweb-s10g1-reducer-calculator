{"ast":null,"code":"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, ADD_TO_MEMORY, RECALL_MEMORY, CLEAR_MEMORY, ADD_DIGIT } from './../actions';\nexport const initialState = {\n  total: 100,\n  operation: \"*\",\n  memory: 100,\n  display: ''\n};\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1\n      };\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      };\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        total: 0\n      };\n    case ADD_TO_MEMORY:\n      return {\n        ...state,\n        memory: state.total\n      };\n    case RECALL_MEMORY:\n      return {\n        ...state,\n        total: calculateResult(state.total, state.memory, state.operation)\n      };\n    case CLEAR_MEMORY:\n      return {\n        ...state,\n        memory: 0\n      };\n    case ADD_DIGIT:\n      return {\n        ...state,\n        display: state.display + action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ONE","APPLY_NUMBER","CHANGE_OPERATION","CLEAR_DISPLAY","ADD_TO_MEMORY","RECALL_MEMORY","CLEAR_MEMORY","ADD_DIGIT","initialState","total","operation","memory","display","calculateResult","num1","num2","reducer","state","action","type","payload"],"sources":["/Users/derya/Desktop/Workintech-Repos/S10/fsweb-s10g1-reducer-calculator/src/reducers/index.js"],"sourcesContent":["import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, ADD_TO_MEMORY, RECALL_MEMORY, CLEAR_MEMORY, ADD_DIGIT } from './../actions';\n\nexport const initialState = {\n  total: 100,\n  operation: \"*\",\n  memory: 100,\n  display: ''\n}\n\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case (\"+\"):\n      return num1 + num2;\n    case (\"*\"):\n      return num1 * num2;\n    case (\"-\"):\n      return num1 - num2;\n    default:\n      return;\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case (ADD_ONE):\n      return ({\n        ...state,\n        total: state.total + 1\n      });\n    case (APPLY_NUMBER):\n      return ({\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      });\n    case (CHANGE_OPERATION):\n      return ({\n        ...state,\n        operation: action.payload\n      });\n    case (CLEAR_DISPLAY):\n      return ({\n        ...state,\n        total: 0\n      });\n    case (ADD_TO_MEMORY):\n      return ({\n        ...state,\n        memory: state.total\n      });\n    case (RECALL_MEMORY):\n      return ({\n        ...state,\n        total: calculateResult(state.total, state.memory, state.operation)\n      });\n    case (CLEAR_MEMORY):\n      return ({\n        ...state,\n        memory: 0\n      });\n    case (ADD_DIGIT):\n      return ({\n        ...state,\n        display: state.display + action.payload\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,QAAQ,cAAc;AAE5I,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,GAAG;EACdC,MAAM,EAAE,GAAG;EACXC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEL,SAAS,KAAK;EACjD,QAAQA,SAAS;IACf,KAAM,GAAG;MACP,OAAOI,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB;MACE;EACJ;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAMnB,OAAO;MACX,OAAQ;QACN,GAAGiB,KAAK;QACRR,KAAK,EAAEQ,KAAK,CAACR,KAAK,GAAG;MACvB,CAAC;IACH,KAAMR,YAAY;MAChB,OAAQ;QACN,GAAGgB,KAAK;QACRR,KAAK,EAAEI,eAAe,CAACI,KAAK,CAACR,KAAK,EAAES,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACP,SAAS;MACrE,CAAC;IACH,KAAMR,gBAAgB;MACpB,OAAQ;QACN,GAAGe,KAAK;QACRP,SAAS,EAAEQ,MAAM,CAACE;MACpB,CAAC;IACH,KAAMjB,aAAa;MACjB,OAAQ;QACN,GAAGc,KAAK;QACRR,KAAK,EAAE;MACT,CAAC;IACH,KAAML,aAAa;MACjB,OAAQ;QACN,GAAGa,KAAK;QACRN,MAAM,EAAEM,KAAK,CAACR;MAChB,CAAC;IACH,KAAMJ,aAAa;MACjB,OAAQ;QACN,GAAGY,KAAK;QACRR,KAAK,EAAEI,eAAe,CAACI,KAAK,CAACR,KAAK,EAAEQ,KAAK,CAACN,MAAM,EAAEM,KAAK,CAACP,SAAS;MACnE,CAAC;IACH,KAAMJ,YAAY;MAChB,OAAQ;QACN,GAAGW,KAAK;QACRN,MAAM,EAAE;MACV,CAAC;IACH,KAAMJ,SAAS;MACb,OAAQ;QACN,GAAGU,KAAK;QACRL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE;MAClC,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}